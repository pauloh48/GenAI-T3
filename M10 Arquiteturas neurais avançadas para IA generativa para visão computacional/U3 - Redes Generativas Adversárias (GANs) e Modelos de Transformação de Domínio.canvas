{
	"nodes":[
		{"id":"0c149ef8151aea50","type":"text","text":"**Definição e propósito:**\n- Arquitetura de **Deep Learning** usada para **gerar mídias sintéticas** (imagens, textos, vídeos, áudios).\n- Baseia-se em **dados de treinamento reais** para aprender a criar novos exemplos plausíveis.\n- Apesar de inicialmente aplicada a **imagens**, sua formulação é **flexível** e adaptável a outros tipos de dados.","x":900,"y":-506,"width":885,"height":133},
		{"id":"23d242904e4fdd0f","type":"text","text":"**Estrutura fundamental:**\n- Composta por **duas redes neurais** que interagem entre si:\n    - **Gerador (Generator):** tenta criar amostras falsas que pareçam reais.\n    - **Discriminador (Discriminator):** tenta distinguir entre amostras reais e falsas.\n- As duas redes são treinadas **simultaneamente**, em um processo competitivo.","x":900,"y":-353,"width":655,"height":170},
		{"id":"24fce7611a912bcf","type":"text","text":"https://universodiscreto.substack.com/p/desvendando-as-gans-como-redes-adversariais\n![[ex_gan.png]]","x":1805,"y":-506,"width":467,"height":386},
		{"id":"4e6beec7cefe6e18","type":"text","text":"**Analogia apresentada por Goodfellow:**\n- **Gerador → falsificador de dinheiro**: tenta produzir notas falsas que pareçam autênticas.\n- **Discriminador → policial**: tenta detectar quais notas são falsas.\n- Com o tempo, ambos se aperfeiçoam, elevando o **realismo das falsificações** e a **precisão da detecção**.","x":2400,"y":-893,"width":823,"height":140},
		{"id":"ad859e7ef34f4a96","type":"text","text":"**Mecanismo de funcionamento (“jogo adversarial”):**\n- O **Gerador** melhora tentando **enganar o Discriminador**.\n- O **Discriminador** melhora tentando **identificar corretamente o que é falso ou real**.\n- O treinamento avança até que o Discriminador **não consiga mais distinguir** as imagens falsas das reais — indicando que o Gerador aprendeu bem a distribuição dos dados.","x":2400,"y":-733,"width":823,"height":168},
		{"id":"277fc2867be9058f","type":"text","text":"**Resultado final:**\n- A GAN aprende a **modelar distribuições complexas** de dados.\n- Produz **amostras sintéticas realistas**, úteis em áreas como **arte digital, restauração de imagens, síntese de voz e criação de vídeos**.","x":2400,"y":-553,"width":823,"height":140},
		{"id":"c6acb0ce7f67ce1b","type":"text","text":"https://universodiscreto.substack.com/p/desvendando-as-gans-como-redes-adversariais\n![[gan_flux.png]]","x":2400,"y":-395,"width":456,"height":364},
		{"id":"dc61b70bf68422ac","type":"text","text":"https://en.wikipedia.org/wiki/Generative_adversarial_network\n![[gan_flux_.png]]","x":2928,"y":-395,"width":295,"height":364},
		{"id":"6f9e3bce35c15f9c","type":"text","text":"1. **Noise z (Ruído aleatório)**\n    - É o **ponto de partida** do processo.\n    - O ruído z é um vetor de valores aleatórios (geralmente amostrados de uma distribuição normal ou uniforme).\n    - Serve como **semente** para o Gerador criar novas amostras — por exemplo, imagens que não existem nos dados reais.  ","x":3420,"y":-733,"width":959,"height":119},
		{"id":"a06384f40e0730a2","type":"text","text":"2. **Generator (Gerador)**\n    - Recebe o vetor de ruído z e o transforma em uma **amostra sintética**, chamada G(z).\n    - O objetivo do Gerador é **criar dados falsos** que se pareçam o máximo possível com os dados reais x.\n    - Exemplo: gerar uma imagem de rosto que pareça uma foto verdadeira.\n3. **Discriminator (Discriminador)**\n    - Recebe duas entradas e respectivos rótulos - D(x)≈1 para imagens reais e D(G(z))≈0 para imagens falsas.:\n        - As **amostras reais** x (vindas do conjunto de dados verdadeiro).\n        - As **amostras falsas** G(z) (criadas pelo Gerador).\n    - A tarefa do Discriminador é **classificar** se cada amostra é **real ou falsa** (“Is real or fake”).\n    - Ele funciona como um **crítico ou policial**, aprendendo a identificar fraudes com o tempo.","x":3420,"y":-595,"width":959,"height":280},
		{"id":"1b4ccd451cff1598","type":"text","text":"4. **Jogo adversarial (aprendizado conjunto)**\n    - O **Gerador** é ajustado para **enganar o Discriminador**.\n    - O **Discriminador** é ajustado para **não ser enganado**.\n    - Essa disputa faz com que ambos **melhorem simultaneamente**, até que o Gerador produza amostras tão convincentes que o Discriminador **não consiga mais distinguir** o que é real ou falso.1. **Noise z (Ruído aleatório)**\n\t    - Isso ocorre quando o Discriminador considera que uma amostra falsa possui probabilidade de 50% de ser classificada como real ou falsa -> Não tem como melhorar mais","x":3420,"y":-295,"width":955,"height":195},
		{"id":"69a92d014a48fcdc","type":"text","text":"Esse processo é chamado de **jogo minimax**, porque:\n- **G** quer **minimizar** a capacidade de **D** identificar falsificações.\n- **D** quer **maximizar** sua **precisão** em detectar o que é falso.","x":4560,"y":-180,"width":560,"height":116},
		{"id":"9d147d3685674af9","type":"text","text":"**Gerador**\n![[gera.png]]","x":4560,"y":-720,"width":512,"height":228},
		{"id":"7af2b0cdcdf1f18d","type":"text","text":"**Discriminador**\n![[discri.png]]","x":4560,"y":-475,"width":512,"height":228},
		{"id":"22ad3bc8d5021650","type":"text","text":"https://universodiscreto.substack.com/p/desvendando-as-gans-como-redes-adversariais\n![[datas.png]]\n* Discriminador: dados reais e falsos e tentar discriminar\n* Gerador: Gera apenas dados falsos","x":5220,"y":-635,"width":456,"height":320},
		{"id":"14b1abb5e8f271db","type":"text","text":"**Exemplo minimax**:\n![[gan_ex.png]]","x":5340,"y":-265,"width":500,"height":287},
		{"id":"47021f9ab694eead","type":"text","text":"**Por que GANs importam**\n- Tendem a gerar **amostras visualmente mais fiéis** que métodos como VAE em muitos cenários.\n- Permitem **condicionamento (cGANs)** por classe/texto/imagem → controle sobre o que é gerado.","x":900,"y":-160,"width":785,"height":109},
		{"id":"df71445893aa2b63","type":"text","text":"**Soluções propostas:**\n- **Melhores otimizadores** e ajustes de taxa de aprendizado.\n- **Label smoothing:** rótulos “suavizados” (ex.: usar 0.9 em vez de 1) para evitar confiança excessiva.\n- **DCGAN:** uso de **camadas convolucionais profundas** para estabilizar o aprendizado.\n- **WGAN:** usa a **distância de Wasserstein** para medir o quão longe os dados falsos estão dos reais, **tornando o treino mais estável**.","x":2039,"y":-27,"width":778,"height":186},
		{"id":"a79c2a2bcca736ee","type":"text","text":" **Soluções propostas:**\n- **WGAN / WGAN-GP:** melhoram o equilíbrio entre as redes.\n- **Unrolled GAN:** prevê **vários passos futuros do Discriminador**, dificultando “atalhos” fáceis.\n- **Mini-batch discrimination:** incentiva o Gerador a **produzir amostras variadas** dentro de um mesmo lote.","x":2039,"y":202,"width":778,"height":158},
		{"id":"d4a38e13ca90ce1f","type":"text","text":"**Problemas comuns e estratégias**","x":900,"y":132,"width":299,"height":61},
		{"id":"a270e73c9d602f86","type":"text","text":" **1) Instabilidade de treinamento**\n- O **“jogo minimax”** entre Gerador e Discriminador pode **não convergir**.\n- Às vezes, **uma rede domina a outra**:\n    - O **Discriminador** aprende rápido demais e o Gerador **não consegue melhorar**.\n    - Ou o **Gerador** engana fácil e o Discriminador **não aprende mais nada**.\n- Resultado: **oscilações**, **gradientes instáveis** ou **treino que não converge**.\n    \n\n","x":1293,"y":-31,"width":696,"height":193},
		{"id":"a35a8801ff311946","type":"text","text":"**2) Colapso de modo (Mode Collapse)**\n- O **Gerador** aprende **“atalhos”** para enganar o Discriminador, mas **repete sempre o mesmo tipo de saída**.\n- Exemplo: em vez de gerar todos os dígitos de 0 a 9, ele **só gera o número 3**, porque isso já engana bem o Discriminador.\n- O modelo perde **diversidade**, mesmo que as imagens pareçam reais.\n    \n\n","x":1293,"y":182,"width":696,"height":197},
		{"id":"e18b04f7a404a2b1","type":"text","text":"# U3. Redes Generativas Adversárias (GANs) e Modelos de Transformação de Domínio","x":-800,"y":-120,"width":600,"height":100},
		{"id":"22277a451b045092","type":"text","text":"**Objetivo**:\n- Compreender os **fundamentos do treinamento adversarial**.\n- Identificar **desafios de estabilidade e diversidade**.\n- Aplicar os conceitos em **tarefas reais de transformação de imagens**, conectando o aprendizado anterior (AEs e VAEs) às **GANs**.","x":-497,"y":-460,"width":977,"height":140},
		{"id":"a6f5996a9199e2bb","type":"text","text":"https://colab.research.google.com/drive/1vfRdaOTY1ea4lUrxMBonkTiDi0M-34vq?hl=pt-br","x":-60,"y":-600,"width":380,"height":80},
		{"id":"8e982ac6da19c79a","type":"text","text":"## Fundamentos das Redes Generativas Adversariais (GANs): Gerador _versus_ Discriminador e Jogo _Minimax_","x":20,"y":-220,"width":695,"height":73},
		{"id":"827f3dd10b782cfa","type":"text","text":"https://github.com/lucaslattari/neural-network-series/blob/main/16/Face_Generator_GAN.ipynb","x":440,"y":-600,"width":411,"height":80},
		{"id":"42a95ab38f63e749","type":"text","text":"**Marcos da evolução**\n\n- **GAN (2014):** ideia adversarial.\n    \n- **DCGAN:** convoluções profundas estáveis.\n    \n- **BigGAN:** **escala** (ImageNet) → fidelidade/diversidade.\n    \n- **StyleGAN/2/3:** **controle de estilo**, **progressive growing**, alias-free, **alta resolução** (ex.: **CelebA-HQ**).","x":900,"y":494,"width":804,"height":166},
		{"id":"7f01a1c44b69534d","type":"text","text":"## Aplicações Práticas: Pix2Pix® e CycleGAN®","x":-20,"y":922,"width":641,"height":56},
		{"id":"47d6703d8adaa060","type":"text","text":"### Pix2Pix®","x":764,"y":850,"width":176,"height":60},
		{"id":"1db58d4ca7d287c4","type":"text","text":" **Conceito principal**\n\n- O **Pix2Pix®** é uma **GAN condicional (cGAN)** voltada para **tradução de imagens pareadas**.\n- A rede **recebe uma imagem de entrada** (ex.: esboço, mapa de rótulos, contornos)  \n    → e **gera uma imagem de saída correspondente** (ex.: foto realista).\n- Requer **pares de imagens alinhados** (entrada e alvo) durante o treinamento.","x":1080,"y":698,"width":712,"height":170},
		{"id":"a5e4f31a4b18de9e","type":"text","text":"**Exemplos de aplicações**\n- Converter **esboços em fotos realistas**.\n- Transformar **mapas de segmentos** (resultado de segmentação) em imagens reais.\n- Gerar **fachadas de prédios** realistas a partir de desenhos estruturais.","x":1080,"y":880,"width":712,"height":130},
		{"id":"c0bb7bda2a43daaf","type":"text","text":" **Conceito principal**\n\n- O **CycleGAN®** é uma arquitetura de **GAN não pareada** usada para **tradução de imagens entre dois domínios diferentes**.\n- **Não precisa de pares correspondentes** de imagens para o treinamento (diferente do Pix2Pix®).\n- Exemplo: um conjunto com **fotos de cavalos** e outro com **fotos de zebras**, sem correspondência direta entre elas.","x":1080,"y":1060,"width":940,"height":148},
		{"id":"222fd67c1a555759","type":"text","text":" **Ideia central — Consistência de ciclo**\n- A rede aprende **duas traduções inversas**: G e F são duas redes que aprendem transformações **opostas e complementares**\n    - **G: X → Y** (ex.: cavalo → zebra); imagens do domínio X no domínio Y\n    - **F: Y → X** (ex.: zebra → cavalo) ; imagens do domínio Y no domínio X\n- O modelo aplica o princípio de **consistência de ciclo**:\n    - Se uma imagem x do domínio X for traduzida para Y e depois reconvertida a X, o resultado **deve se parecer com a imagem original**:  \n        F(G(x))≈xF(G(x)) ≈ xF(G(x))≈x\n    - O mesmo vale para y∈Yy \\in Yy∈Y:  \n        G(F(y))≈yG(F(y)) ≈ yG(F(y))≈y\n- Essa restrição garante que as **traduções preservem o conteúdo** e alterem apenas o **estilo visual**.","x":1080,"y":1228,"width":940,"height":320},
		{"id":"7fe59d6cb0adf234","type":"text","text":"### CycleGAN®","x":764,"y":1208,"width":176,"height":60},
		{"id":"23cf23a4943991a7","type":"text","text":"https://arxiv.org/pdf/1611.07004\n![[pix_1.png]]","x":2005,"y":422,"width":812,"height":361},
		{"id":"7ae365e35346d42a","type":"text","text":"![[pix_2.png]]","x":2880,"y":422,"width":620,"height":361},
		{"id":"38537b388c6a1b0d","type":"text","text":"![[pix_3.png]]","x":3580,"y":422,"width":620,"height":361},
		{"id":"5948f86dc9691d67","type":"text","text":"![[cycle.png]]","x":2160,"y":888,"width":720,"height":380},
		{"id":"c7f50756a9619859","type":"text","text":"![[cycle_model.png]]","x":2210,"y":1300,"width":403,"height":320},
		{"id":"aaa72b7e24908eab","type":"text","text":"2.  **Geradores — G e F**\nAs **setas curvas** entre X e Y mostram que há **duas transformações opostas**:\n- **G: X → Y**\n    - Traduz uma imagem do domínio X para parecer uma imagem do domínio Y.\n    - Exemplo: transforma uma **foto de cavalo** em uma **foto de zebra**.\n- **F: Y → X**\n    - Traduz uma imagem do domínio Y para o domínio X.\n    - Exemplo: transforma uma **foto de zebra** em uma **foto de cavalo**.\n* Juntas, essas duas funções formam o **ciclo de tradução** (CycleGAN = _Cycle-Consistent GAN_).","x":2960,"y":1219,"width":1020,"height":300},
		{"id":"379b0cde031d5ee2","type":"text","text":"3.  **Consistência de ciclo**\n- Quando o modelo traduz **X → Y → X** (ou **Y → X → Y**),  \n    ele deve **recuperar a imagem original**.\n    - Formalmente:\n        - F(G(x))≈xF(G(x)) ≈ xF(G(x))≈x\n        - G(F(y))≈yG(F(y)) ≈ yG(F(y))≈y   \n- Essa ideia garante que as conversões **preservem o conteúdo estrutural** (forma, pose, composição), mudando apenas o **estilo visual** (textura, cor, iluminação).","x":2960,"y":1531,"width":1020,"height":240},
		{"id":"47ca42e8e669f4e9","type":"text","text":"4.  **Discriminadores — Dₓ e Dᵧ**\n- São as **redes críticas (avaliadoras)** que dizem se uma imagem é **real ou gerada**:\n    - **Dₓ:** julga se uma imagem pertence ao **domínio X** (real cavalo ou falso cavalo gerado por F).\n    - **Dᵧ:** julga se uma imagem pertence ao **domínio Y** (real zebra ou falsa zebra gerada por G).\n- Eles “treinam” os geradores, obrigando-os a criar imagens **cada vez mais realistas**.","x":2960,"y":1791,"width":1020,"height":172},
		{"id":"6d26e96593306698","type":"text","text":"1.  **Domínios X e Y**\n- **X** e **Y** são **dois conjuntos de imagens diferentes**, chamados de **domínios**.\n    - Exemplo:\n        - **X:** fotos de **cavalos**\n        - **Y:** fotos de **zebras**\nEsses domínios **não possuem pares correspondentes**, ou seja, não é necessário que exista a mesma imagem em ambos os conjuntos.","x":2960,"y":1020,"width":1020,"height":187},
		{"id":"76478d18f8ad7722","x":1909,"y":-618,"width":250,"height":60,"type":"text","text":"https://www.youtube.com/@UniversoDiscreto/playlists"}
	],
	"edges":[
		{"id":"a1ff92d5d98813e4","fromNode":"a6f5996a9199e2bb","fromSide":"right","toNode":"827f3dd10b782cfa","toSide":"left"},
		{"id":"447f0a71b14c409d","fromNode":"e18b04f7a404a2b1","fromSide":"top","toNode":"22277a451b045092","toSide":"left"},
		{"id":"e90244780248f76a","fromNode":"e18b04f7a404a2b1","fromSide":"right","toNode":"8e982ac6da19c79a","toSide":"left"},
		{"id":"a2cdac2d1bcab4ce","fromNode":"23d242904e4fdd0f","fromSide":"right","toNode":"24fce7611a912bcf","toSide":"left"},
		{"id":"9a8a52cfc9a4c885","fromNode":"8e982ac6da19c79a","fromSide":"right","toNode":"0c149ef8151aea50","toSide":"left"},
		{"id":"f0b2e4eac9d3d9f9","fromNode":"24fce7611a912bcf","fromSide":"right","toNode":"ad859e7ef34f4a96","toSide":"left"},
		{"id":"7262f0009d8e56f5","fromNode":"24fce7611a912bcf","fromSide":"right","toNode":"4e6beec7cefe6e18","toSide":"left"},
		{"id":"b2cf91e5bc4ade7c","fromNode":"24fce7611a912bcf","fromSide":"right","toNode":"277fc2867be9058f","toSide":"left"},
		{"id":"960036bbe11ab128","fromNode":"8e982ac6da19c79a","fromSide":"right","toNode":"23d242904e4fdd0f","toSide":"left"},
		{"id":"ea1bf2470fcc60a8","fromNode":"24fce7611a912bcf","fromSide":"right","toNode":"c6acb0ce7f67ce1b","toSide":"left"},
		{"id":"3f1e5b076f8d8a68","fromNode":"dc61b70bf68422ac","fromSide":"right","toNode":"6f9e3bce35c15f9c","toSide":"left"},
		{"id":"7e3557c7c5b4a817","fromNode":"dc61b70bf68422ac","fromSide":"right","toNode":"1b4ccd451cff1598","toSide":"left"},
		{"id":"f5ab4bc12ebe1692","fromNode":"dc61b70bf68422ac","fromSide":"right","toNode":"a06384f40e0730a2","toSide":"left"},
		{"id":"437516b803ee8b5c","fromNode":"9d147d3685674af9","fromSide":"right","toNode":"22ad3bc8d5021650","toSide":"left"},
		{"id":"48ee9beeb4d25a99","fromNode":"c6acb0ce7f67ce1b","fromSide":"right","toNode":"dc61b70bf68422ac","toSide":"left"},
		{"id":"5115ad7ba207b5a2","fromNode":"1b4ccd451cff1598","fromSide":"right","toNode":"69a92d014a48fcdc","toSide":"left"},
		{"id":"db23cbaf0547d514","fromNode":"a06384f40e0730a2","fromSide":"right","toNode":"9d147d3685674af9","toSide":"left"},
		{"id":"63ab04ced599db88","fromNode":"a06384f40e0730a2","fromSide":"right","toNode":"7af2b0cdcdf1f18d","toSide":"left"},
		{"id":"70a04f4c5c9f9845","fromNode":"7af2b0cdcdf1f18d","fromSide":"right","toNode":"22ad3bc8d5021650","toSide":"left"},
		{"id":"5bc771a928900c9e","fromNode":"69a92d014a48fcdc","fromSide":"right","toNode":"14b1abb5e8f271db","toSide":"left"},
		{"id":"498f7a618a28bbb7","fromNode":"8e982ac6da19c79a","fromSide":"right","toNode":"47021f9ab694eead","toSide":"left"},
		{"id":"e8b6a74939378144","fromNode":"8e982ac6da19c79a","fromSide":"right","toNode":"d4a38e13ca90ce1f","toSide":"left"},
		{"id":"fa62b81f9ab65a03","fromNode":"d4a38e13ca90ce1f","fromSide":"right","toNode":"a270e73c9d602f86","toSide":"left"},
		{"id":"1abf47e0db355606","fromNode":"d4a38e13ca90ce1f","fromSide":"right","toNode":"a35a8801ff311946","toSide":"left"},
		{"id":"6074a36577dc3072","fromNode":"a270e73c9d602f86","fromSide":"right","toNode":"df71445893aa2b63","toSide":"left"},
		{"id":"f0754f0c62103ef1","fromNode":"a35a8801ff311946","fromSide":"right","toNode":"a79c2a2bcca736ee","toSide":"left"},
		{"id":"8959a219f4817e6a","fromNode":"8e982ac6da19c79a","fromSide":"right","toNode":"42a95ab38f63e749","toSide":"left"},
		{"id":"d70da8997d1a10be","fromNode":"e18b04f7a404a2b1","fromSide":"right","toNode":"7f01a1c44b69534d","toSide":"left"},
		{"id":"ad7363d71bf9c9f8","fromNode":"7f01a1c44b69534d","fromSide":"right","toNode":"47d6703d8adaa060","toSide":"left"},
		{"id":"14dfd2499f6b983a","fromNode":"7f01a1c44b69534d","fromSide":"right","toNode":"7fe59d6cb0adf234","toSide":"left"},
		{"id":"6b19d76c1e5c58a8","fromNode":"47d6703d8adaa060","fromSide":"right","toNode":"1db58d4ca7d287c4","toSide":"left"},
		{"id":"111c058a463ac7af","fromNode":"47d6703d8adaa060","fromSide":"right","toNode":"a5e4f31a4b18de9e","toSide":"left"},
		{"id":"f643244fbb8aaf0f","fromNode":"7fe59d6cb0adf234","fromSide":"right","toNode":"c0bb7bda2a43daaf","toSide":"left"},
		{"id":"0a3588da0c8a294b","fromNode":"7fe59d6cb0adf234","fromSide":"right","toNode":"222fd67c1a555759","toSide":"left"},
		{"id":"94fcc71792196257","fromNode":"1db58d4ca7d287c4","fromSide":"right","toNode":"23cf23a4943991a7","toSide":"left"},
		{"id":"3980fea476b3e8b2","fromNode":"23cf23a4943991a7","fromSide":"right","toNode":"7ae365e35346d42a","toSide":"left"},
		{"id":"d6bae016a254800d","fromNode":"7ae365e35346d42a","fromSide":"right","toNode":"38537b388c6a1b0d","toSide":"left"},
		{"id":"7dbf2c3b9ce3c248","fromNode":"222fd67c1a555759","fromSide":"right","toNode":"c7f50756a9619859","toSide":"left"},
		{"id":"147043975498afdc","fromNode":"c7f50756a9619859","fromSide":"right","toNode":"6d26e96593306698","toSide":"left"},
		{"id":"6b2d3ab901e3dd8d","fromNode":"c7f50756a9619859","fromSide":"right","toNode":"aaa72b7e24908eab","toSide":"left"},
		{"id":"51848df8bdf0fd90","fromNode":"c7f50756a9619859","fromSide":"right","toNode":"379b0cde031d5ee2","toSide":"left"},
		{"id":"f0bfefab560f9d45","fromNode":"c7f50756a9619859","fromSide":"right","toNode":"47ca42e8e669f4e9","toSide":"left"},
		{"id":"cde343a7592b7e55","fromNode":"c0bb7bda2a43daaf","fromSide":"right","toNode":"5948f86dc9691d67","toSide":"left"},
		{"id":"0c1ed4c449dbf611","fromNode":"24fce7611a912bcf","fromSide":"top","toNode":"76478d18f8ad7722","toSide":"bottom"}
	]
}